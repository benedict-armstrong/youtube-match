services:
  proxy:
    container_name: ym_proxy
    image: haproxy:alpine
    restart: always
    ports:
      - 8009:8080
    volumes:
      - ./proxy/config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    env_file:
      - ./proxy/proxy.env
    links:
      - api
      - client

  api:
    container_name: ym_api
    image: benarmstrong/ym/api:latest
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./api/secret/:/secret/
    links:
      - database
    depends_on:
      - database
    env_file:
      - ./api/docker.api.env
    environment:
      - RUNNING_IN_DOCKER=true

  client:
    container_name: ym_frontend
    image: benarmstrong/ym/frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always

  database:
    container_name: ym_database
    image: postgres:14.2-alpine
    restart: always
    env_file:
      - ./database/database.env
    volumes:
      - ./database/data:/var/lib/postgresql/data
      - ./database/create.sql:/docker-entrypoint-initdb.d/create.sql:ro
    #ports:
    #  - 5432:5432
